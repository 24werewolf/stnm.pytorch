#ifdef __cplusplus
extern "C" {
#endif


// int BilinearSamplerBHWD_updateOutput_cuda_kernel(/*output->size[2]*/int sz1,
//                                                  /*output->size[1]*/int sz2,
//                                                  /*output->size[0]*/int sz3,
//                                                  /*THCudaTensor_size(state, inputImages, 3)*/int ic,
//                                                  /*THCudaTensor_size(state, inputImages, 1)*/int ih,
//                                                  /*THCudaTensor_size(state, inputImages, 2)*/int iw,
//                                                  /*THCudaTensor_size(state, output, 2)*/int ow,
//                                                  /*THCudaTensor *inputImages*/float *inputImages, int isb, int isc, int ish, int isw,
//                                                  /*THCudaTensor *grids*/float *grids, int gsb, int gsc, int gsh, int gsw,
//                                                  /*THCudaTensor *output*/float *output, int osb, int osc, int osh, int osw,
//                                                  /*THCState_getCurrentStream(state)*/cudaStream_t stream);
//
// int BilinearSamplerBHWD_updateGradInput_cuda_kernel(/*gradOutput->size[2]*/int sz1,
//                                                     /*gradOutput->size[1]*/int sz2,
//                                                     /*gradOutput->size[0]*/int sz3,
//                                                     /*THCudaTensor_size(state, inputImages, 3)*/int ic,
//                                                     /*THCudaTensor_size(state, inputImages, 1)*/int ih,
//                                                     /*THCudaTensor_size(state, inputImages, 2)*/int iw,
//                                                     /*THCudaTensor_size(state, gradOutput, 2)*/int gow,
//                                                     /*THCudaTensor *inputImages*/float *inputImages, int isb, int isc, int ish, int isw,
//                                                     /*THCudaTensor *grids*/float *grids, int gsb, int gsc, int gsh, int gsw,
//                                                     /*THCudaTensor *gradInputImages*/float *gradInputImages, int gisb, int gisc, int gish, int gisw,
//                                                     /*THCudaTensor *gradGrids*/float *gradGrids, int ggsb, int ggsc, int ggsh, int ggsw,
//                                                     /*THCudaTensor *gradOutput*/float *gradOutput, int gosb, int gosc, int gosh, int gosw,
//                                                     /*THCState_getCurrentStream(state)*/cudaStream_t stream);

int BilinearSamplerBHWD_updateOutput_cuda_kernel(/*output->size[2]*/int sz1,
                                                 /*output->size[1]*/int sz2,
                                                 /*output->size[0]*/int sz3,
                                                 float* inputImages_data,
                                                 int inputImages_strideBatch,
                                                 int inputImages_strideChannels,
                                                 int inputImages_strideHeight,
                                                 int inputImages_strideWidth,
                                                 float* grids_data,
                                                 int grids_strideBatch,
                                                 int grids_strideYX,
                                                 int grids_strideHeight,
                                                 int grids_strideWidth,
                                                 float* masks_data,
                                                 int masks_strideBatch,
                                                 int masks_strideYX,
                                                 int masks_strideHeight,
                                                 int masks_strideWidth,
                                                 float* canvas_data,
                                                 int canvas_strideBatch,
                                                 int canvas_strideYX,
                                                 int canvas_strideHeight,
                                                 int canvas_strideWidth,
                                                 float* output_data,
                                                 int output_strideBatch,
                                                 int output_strideChannels,
                                                 int output_strideHeight,
                                                 int output_strideWidth,
                                                 int inputImages_channels,
                                                 int inputImages_height,
                                                 int inputImages_width,
                                                 int output_width,
                                                 cudaStream_t stream);

int BilinearSamplerBHWD_updateGradInput_cuda_kernel(/*gradOutput->size[2]*/int sz1,
                                                    /*gradOutput->size[1]*/int sz2,
                                                    /*gradOutput->size[0]*/int sz3,
                                                    float* inputImages_data,
                                                    int inputImages_strideBatch,
                                                    int inputImages_strideChannels,
                                                    int inputImages_strideHeight,
                                                    int inputImages_strideWidth,
                                                    float* gradInputImages_data,
                                                    int gradInputImages_strideBatch,
                                                    int gradInputImages_strideChannels,
                                                    int gradInputImages_strideHeight,
                                                    int gradInputImages_strideWidth,
                                                    float* grids_data,
                                                    int grids_strideBatch,
                                                    int grids_strideYX,
                                                    int grids_strideHeight,
                                                    int grids_strideWidth,
                                                    float* gradGrids_data,
                                                    int gradGrids_strideBatch,
                                                    int gradGrids_strideYX,
                                                    int gradGrids_strideHeight,
                                                    int gradGrids_strideWidth,
                                                    float* masks_data,
                                                    int masks_strideBatch,
                                                    int masks_strideYX,
                                                    int masks_strideHeight,
                                                    int masks_strideWidth,
                                                    float* gradMasks_data,
                                                    int gradMasks_strideBatch,
                                                    int gradMasks_strideYX,
                                                    int gradMasks_strideHeight,
                                                    int gradMasks_strideWidth,
                                                    float* canvas_data,
                                                    int canvas_strideBatch,
                                                    int canvas_strideYX,
                                                    int canvas_strideHeight,
                                                    int canvas_strideWidth,
                                                    float* gradCanvas_data,
                                                    int gradCanvas_strideBatch,
                                                    int gradCanvas_strideYX,
                                                    int gradCanvas_strideHeight,
                                                    int gradCanvas_strideWidth,
                                                    float* gradOutput_data,
                                                    int gradOutput_strideBatch,
                                                    int gradOutput_strideChannels,
                                                    int gradOutput_strideHeight,
                                                    int gradOutput_strideWidth,
                                                    int inputImages_channels,
                                                    int inputImages_height,
                                                    int inputImages_width,
                                                    int gradOutput_width,
                                                    cudaStream_t stream);

int BilinearSamplerBHWD_updateGradInputOnlyGrid_cuda_kernel(
                                        /*gradOutput->size[2]*/int sz1,
                                        /*gradOutput->size[1]*/int sz2,
                                        /*gradOutput->size[0]*/int sz3,
                                        /*THCudaTensor_size(state, inputImages, 3)*/int ic,
                                        /*THCudaTensor_size(state, inputImages, 1)*/int ih,
                                        /*THCudaTensor_size(state, inputImages, 2)*/int iw,
                                        /*THCudaTensor_size(state, gradOutput, 2)*/int gow,
                                        /*THCudaTensor *inputImages*/float *inputImages, int isb, int isc, int ish, int isw,
                                        /*THCudaTensor *grids*/float *grids, int gsb, int gsc, int gsh, int gsw,
                                        /*THCudaTensor *gradGrids*/float *gradGrids, int ggsb, int ggsc, int ggsh, int ggsw,
                                        /*THCudaTensor *gradOutput*/float *gradOutput, int gosb, int gosc, int gosh, int gosw,
                                        /*THCState_getCurrentStream(state)*/cudaStream_t stream);


#ifdef __cplusplus
}
#endif
